#include <iostream>
#include <stdlib.h>
using namespace std;

#define N 1000

void display(int a[], int n = N)
{
	for(int i = 0; i < n; i++)
		cout << i+1<< ".\t" << a[i] << endl;
		
	cout << endl;
}

// Selection Sort
void selectionSort(int a[], int n = N)
{
	int i, j,temp;
	
	cout << "Selection Sorting . . . " << endl;
	for( i = 0; i < n; i++)
		for(j = i+1; j < n; j++)
			if(a[i] > a[j])
			{
				temp = a[i];
				a[i] = a[j];
				a[j] = temp;
			}
			
}


// Insertion sorting
void insertionSort(int arr[], int n = N) 
{ 
    int i, j; 
    
    
    cout << "Insertion sorting .... " << endl;
    for (i = 1; i < n; i++) { 
        j = i - 1; 
  
        while (j >= 0 && arr[j] > arr[i]) { 
            arr[j + 1] = arr[j]; 
            j = j - 1; 
        } 
        arr[j + 1] = arr[i]; 
    } 
}



// Merge Sorting
void merge(int *left, int *right, int *a, int nR, int nL) {
	
	int i =0, j = 0, k =0;
	
	while(i < nR && j < nL){
		
		if(left[j] < right[i])
			a[k++] = left[j++];
		
		else 
			a[k++] = right[i++];	
	}
	
	while( i< nR)
		a[k++] = right[i++];
	
	while(j < nL) 
	    a[k++] = left[j++];
	
//	cout << "After merging . . ." << endl;
//	display(a, k);
}

void mergeSort(int arr[] , int n = N){
	
//	cout << "Before spliting . . ." << endl;
//	display(arr, n);
	int	i,
		nR = n/2,
		nL = n - nR;
		
	if (n < 2) return;
		
	int *right = (int*) malloc(nR * sizeof(int));
	int *left = (int*) malloc(nL * sizeof(int));
	
	for(i =0;i < nR; i++ )
		right[i] = arr[i];
		
	for(i = 0; i< nL; i++)
		left[i] = arr[i + nR];
		
		
	
	mergeSort(right, nR);
	mergeSort(left, nL);
	
	merge(left, right, arr, nR, nL);
	free(left);
	free(right);	
	
}




main()
{
	int arr[] = {696, 318, 674, 770, 890, 235, 1000, 186, 699, 405, 846, 17, 839, 804, 334, 833, 847, 240, 342, 456, 460, 509, 499, 755, 524, 703, 308, 450, 675, 378, 389, 468, 46, 842, 814, 477, 334, 237, 81, 589, 869, 605, 950, 509, 511, 618, 866, 91, 229, 250, 370, 773, 602, 140, 815, 653, 302, 279, 72, 43, 473, 924, 307, 73, 160, 228, 798, 402, 251, 329, 510, 67, 986, 710, 32, 898, 186, 538, 25, 38, 534, 854, 480, 694, 841, 370, 717, 325, 763, 790, 27, 453, 53, 43, 166, 628, 937, 660, 740, 571, 491, 604, 740, 784, 376, 180, 1, 891, 349, 264, 312, 360, 496, 611, 731, 460, 145, 807, 257, 317, 100, 373, 434, 657, 724, 107, 886, 279, 931, 116, 197, 547, 245, 605, 11, 285, 340, 955, 525, 532, 957, 459, 307, 453, 803, 627, 433, 451, 528, 965, 667, 330, 635, 302, 251, 210, 834, 665, 359, 862, 709, 113, 68, 411, 645, 562, 202, 138, 800, 202, 376, 106, 622, 177, 313, 9, 553, 989, 947, 708, 441, 503, 733, 141, 465, 607, 428, 997, 247, 762, 378, 192, 235, 273, 737, 946, 715, 710, 262, 651, 752, 658, 920, 764, 275, 650, 442, 6, 69, 53, 737, 23, 693, 990, 162, 510, 816, 340, 889, 260, 752, 860, 308, 583, 401, 279, 748, 946, 247, 34, 499, 538, 90, 994, 325, 80, 518, 360, 27, 240, 947, 918, 372, 150, 348, 797, 585, 452, 188, 858, 420, 5, 168, 366, 110, 281, 430, 936, 683, 570, 710, 898, 563, 258, 929, 493, 925, 320, 405, 150, 330, 696, 753, 172, 709, 197, 257, 850, 672, 317, 578, 61, 661, 325, 154, 595, 945, 626, 542, 465, 560, 365, 962, 852, 442, 700, 189, 427, 241, 828, 3, 724, 731, 563, 696, 280, 86, 503, 247, 492, 523, 487, 464, 660, 348, 363, 912, 783, 714, 867, 636, 934, 189, 643, 992, 880, 291, 422, 237, 438, 259, 802, 482, 991, 929, 118, 530, 886, 273, 62, 609, 912, 606,
955, 958, 736, 138, 268, 836, 518, 668, 909, 484, 220, 440, 55, 917, 529, 56, 750, 498, 993, 173, 717, 473, 189, 658, 789, 539, 402, 959, 150, 809, 979, 537, 131, 592,
251, 134, 93, 302, 923, 648, 701, 814, 391, 942, 720, 588, 357, 430, 145, 370, 959, 21, 336, 922, 902, 793, 589, 468, 657, 634, 605, 70, 332, 554, 217, 566, 580, 533, 92, 504, 724, 234, 999, 73, 468, 222, 229, 599, 615, 609, 973, 671, 406, 332, 562, 905, 634, 977, 700, 336, 913, 471, 713, 87, 772, 395, 975, 856, 948, 140, 36, 261, 223, 258, 592, 680, 508, 285, 111, 596, 453, 580, 370, 710, 270, 813, 934, 114, 515, 941, 496, 35, 748, 786, 919, 899, 822, 71, 619, 825, 189, 526, 531, 949, 786, 446, 648, 383, 883, 779, 12, 212, 39, 608, 666, 976, 274, 695, 587, 604, 704, 567, 699, 737, 403, 378, 286, 877, 840, 723, 561, 218, 492, 158, 17, 524, 51, 674, 761, 837, 418,
487, 72, 549, 792, 627, 257, 274, 948, 887, 549, 639, 291, 963, 497, 283, 447, 455, 238, 863, 582, 498, 502, 349, 434, 715, 517, 893, 631, 323, 315, 13, 677, 365, 766,
237, 699, 27, 587, 947, 636, 739, 753, 749, 190, 354, 897, 301, 722, 832, 769, 887, 195, 442, 26, 316, 967, 512, 385, 192, 391, 921, 413, 428, 551, 471, 705, 321, 689,
717, 546, 576, 530, 742, 761, 697, 779, 558, 70, 346, 796, 557, 858, 454, 558, 194, 706, 135, 367, 634, 834, 265, 297, 521, 148, 922, 136, 150, 527, 772, 736, 227, 505, 662, 102, 616, 231, 692, 191, 769, 245, 355, 136, 92, 648, 730, 624, 632, 480, 310, 310, 755, 983, 132, 152, 497, 333, 885, 184, 278, 246, 700, 926, 101, 248, 270, 871, 31, 778, 420, 600, 682, 414, 129, 394, 838, 232, 643, 79, 189, 769, 446, 173, 302, 819, 366, 644, 150, 307, 289, 241, 236, 457, 620, 610, 522, 479, 569, 276, 628, 512, 571, 871, 575, 793, 368, 450, 408, 701, 903, 474, 398, 515, 692, 429, 796, 797, 705, 113, 213, 948, 321, 456, 904, 499, 832, 971, 435, 87, 270, 357, 492, 422, 514, 382, 81, 555, 22, 114, 25, 626, 219, 120, 335, 776, 916, 220, 916, 795, 651, 202, 361, 468, 916, 47, 762, 619, 801, 301, 664, 154, 741, 232, 833, 388, 319, 427, 894, 941, 627, 34, 13, 262, 96, 543, 157, 933, 929, 41, 780, 589, 533, 319, 785, 178, 805, 49, 494, 478, 62, 202, 142, 1000, 834, 420, 829, 852, 873, 766, 777, 593, 475, 783, 27, 572, 735, 590, 711, 502, 690, 727, 539, 249, 47, 331, 280, 840, 204, 906, 777, 46, 768, 922, 899, 636, 503, 439, 202, 516, 248, 946, 907, 556, 523, 913, 453, 976, 602, 713, 975, 184, 412, 314, 616, 179, 307, 215, 192, 88, 128, 286, 903, 585, 393, 479, 167, 638, 337, 796, 575, 50, 673, 203, 745, 474, 462, 816, 933, 937, 941, 145, 866, 701, 808, 33, 895, 649, 796, 58, 773, 135, 756, 846, 251, 619, 839, 201, 644, 878, 918, 419, 481, 136, 930, 201, 92, 831, 364, 25, 103, 728, 530, 644, 37, 989, 630, 738, 164, 815, 357, 718, 611, 63, 129, 517, 482, 210, 858, 177, 6, 458, 110, 265, 207, 432, 903, 514, 991, 435, 959, 539, 103, 860, 735, 544, 799, 350, 825, 958, 661, 634, 408, 57, 178, 91, 513, 669, 467, 491, 820, 107, 996, 762, 263, 56, 714, 751, 889, 108, 297, 132, 825, 339, 983, 152, 481, 431, 826, 139, 148, 969, 639, 455, 679, 699, 977, 215, 684, 760, 739, 927, 805, 182, 994, 69, 824, 960, 307, 770, 186, 150, 848, 340, 908, 728, 976, 196, 136, 720, 399, 661, 580, 41, 587, 61, 127, 402, 22, 859,
254, 978, 973, 348, 282, 969, 760, 325};
//	cout<< "Before sorting . . ." << endl; display(arr);
	
//	cout << "Merge Sorting . . ." << endl;mergeSort(arr);
 	selectionSort(arr);
//	insertionSort(arr);
	cout << "Result :" << endl;
	display(arr);
	
	free(arr);
	
	
}
